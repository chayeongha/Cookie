<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.cookie.basic.board.review.ReviewMapper">
  	<sql id="bs">
  		<choose>
  			<when test="kind == 'kt'">
  				where title like CONCAT('%',#{search},'%') and
  			</when>
  			<when test="kind == 'kc'">
  				where contents like CONCAT('%',#{search},'%') and
  			</when>
  			<when test="kind == 'kw'">
  				where writer like CONCAT('%',#{search},'%') and
  			</when>
  			<otherwise>
  				where
  			</otherwise>
  		</choose>
  	</sql>
  	
  	<resultMap type="StoreVO" id="Sselect">
  		<id column="ssNum" property="ssNum"/>
  		<result column="sName" property="sName"/>
  		<result column="sTel" property="sTel"/>
  		<result column="roadFullAddr" property="roadFullAddr"/>
  		<result column="sNotice" property="sNotice"/>
  		<result column="sOn" property="sOn"/>
  		<result column="memNum" property="memNum"/>
  		<result column="memId" property="memId"/>
  		<association property="storeFilesVO" javaType="StoreFilesVO">
  			<id column="fNum" property="fNum"/>
  			<result column="fName" property="fName"/>
  			<result column="oName" property="oName"/>  		
  		</association>
  	</resultMap>
  	
  	<select id="snameSelect" parameterType="StoreVO" resultMap="Sselect">
  		select S.sName, SF.fName 
  		from store S 
  			left outer join storeFiles SF on S.ssNum = SF.ssNum 
  		where S.ssNum = #{ssNum}
  	</select>
  	
  	<resultMap type="OrderListVO" id="OLselect">
  		<id column="olNum" property="olNum"/>
  		<result column="ocNum" property="ocNum"/>
  		<collection property="cartVOs" javaType="List" ofType="CartVO">
  			<id column="cartNum" property="cartNum"/>
	  		<result column="mmNum" property="mmNum"/>
	  		<result column="mmCount" property="mmCount"/>
	  		<result column="nickname" property="nickname"/>
	  		<result column="ssNum" property="ssNum"/>
	  		<collection property="menuVOs" javaType="List" ofType="MenuVO">
		  		<result column="mmName" property="mmName"/>
		  		<collection property="menuOptions" javaType="List" ofType="MoptVO">
		  			<id column="optNum" property="optNum"/>
			  		<result column="optName" property="optName"/>
	  			</collection>
	  			<collection property="cartOptionVOs" javaType="List" ofType="CartOptionVO">
	  				<result column="optNum" property="optNum"/>
			  		<result column="optCount" property="optCount"/>
	  			</collection>
  			</collection>
 		</collection>
  	</resultMap>
  	
  	<select id="orderSelect" parameterType="OrderListVO" resultMap="OLselect">
  		select OL.olNum, OL.ocNum, C.cartNum, C.mmNum, C.nickname, C.ssNum, M.mmName, C.mmCount, O.optNum, O.optName, ifnull(CO.optCount, 0) optCount
			from orderList OL
				left outer join cart C on OL.ocNum = C.ocNum
				left outer join menu M on C.mmNum = M.mmNum
				left outer join mopt O on M.mmNum = O.mmNum
				left outer join cartOption CO on C.cartNum = CO.cartNum and O.optNum = CO.optNum
			where OL.olNum = #{olNum} order by cartNum, optNum
  	</select>
  	
  	<resultMap type="ReviewVO" id="Select">
  		<id column="num" property="num"/>
  		<result column="writer" property="writer"/>
  		<result column="contents" property="contents"/>
  		<result column="regDate" property="regDate"/>
  		<result column="star" property="star"/>
  		<result column="olNum" property="olNum"/>
  		<result column="writerS" property="writerS"/>
  		<collection property="reviewFilesVO" javaType="List" ofType="ReviewFilesVO">
	  		<id column="fnum" property="fnum"/>
	  		<result column="oname" property="oname"/>
	  		<result column="fname" property="fname"/>
  		</collection>
  	</resultMap>
  	
  	<delete id="reviewDelete" parameterType="ReviewVO">
  		delete from review where olNum = #{olNum}
  	</delete>
  	
  	<update id="reviewUpdate" parameterType="ReviewVO">
  		update review set contents = #{contents}, star = #{star}
  		where olNum = #{olNum}
  	</update>
  	
  	<select id="reviewSelect" parameterType="ReviewVO" resultMap="Select">
  		select R.*, F.fnum, F.fname, F.oname
  		from review R left outer join reviewFiles F
  		on R.num = F.num
  		where R.olNum = #{olNum}
  	</select>
  	
  	<insert id="reviewWrite" parameterType="ReviewVO" useGeneratedKeys="true" keyProperty="num">
  		insert into review values(0, #{writer}, #{contents}, now(), #{star}, #{olNum})
  	</insert>
  	
  	<select id="reviewList" parameterType="Pager" resultType="reviewVO">
  		select *, REGEXP_REPLACE(writer, <![CDATA['(?<=.{3}).']]>, '*') as writerS from review
  		<include refid="bs"></include> num > 0
  		order by num desc LIMIT #{startRow}, #{perPage}
  	</select>

  	<select id="reviewCount" resultType="Integer" parameterType="Pager">
  		select count(num) from review
  		<include refid="bs"></include> num > 0
  	</select>
  </mapper>