<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.cookie.basic.member.MemberMapper">
  
  	<!--회원가입  -->
  	<insert id="memberJoin" parameterType="MemberVO" useGeneratedKeys="true" keyProperty="memNum">
  			insert into members values (null,#{memId},#{pw},#{name},#{nickname},#{phone},#{grade},#{kind})
  	</insert>

  	<!--로그인 resultmap  -->
  	<resultMap type="MemberVO" id="MemberLogin">
  			<id column="memNum" property="memNum"/>
  			<result column="memId" property="memId"/>
  			<result column="pw" property="pw"/>
  			<result column="name" property="name"/>
  			<result column="nickname" property="nickname"/>
  			<result column="phone" property="phone"/>
  			<result column="grade" property="grade"/>
  			<result column="kind" property="kind"/>
  		<association property="memberFilesVO" javaType="memberFilesVO">
  			<id column="fnum" property="fnum"/>
  			<result column="fname" property="fname"/>
  			<result column="oname" property="oname"/>
  		</association>
  	</resultMap>
  	
  	<!--로그인  -->
  	<select id= "memberLogin" parameterType="MemberVO" resultMap="MemberLogin">
  			select M.*,F.* from members M left join memberFiles F
			on M.memNum=F.memNum
 			where M.memId=#{memId} and M.pw=#{pw}
			union
			select M.*,F.* from members M right join memberFiles F
			on M.memNum=F.memNum
			where M.memId=#{memId} and M.pw=#{pw}		
   	</select>
   	
   	<!--아이디중복검사 -->
   	<select id="memberIdCheck" parameterType="MemberVO" resultType="MemberVO">
   			select memId from members where memId=#{memId}
   	</select>
   	
   	<!--회원정보 수정 -->
   	<update id="memberUpdate" parameterType="MemberVO">
   			update members set pw=#{pw}, name=#{name}, nickname=#{nickname},phone=#{phone} 
   			where memNum=#{memNum}
   	</update>
   	
   	<!--마이페이지에서 회원 탈퇴  -->
   	<delete id="memberDelete" parameterType="MemberVO">
   			delete from members where nickname=#{nickname}
   	</delete>
	
	<!--관리자가 개인회원탈퇴  -->
	<delete id="pmemberDelete" parameterType="MemberVO">
			delete from members where memNum=#{memNum}
	</delete>

   	<!--회원 검색 -->
   	<sql id="search">
  			<choose>
  				<when test="kind =='ki'">
  						where memId like CONCAT('%',#{search},'%') 
  				</when>
  				<otherwise>
  						where nickname like CONCAT('%',#{search},'%')
  				</otherwise>
  			</choose>
  	</sql>
   	
   	<!--개인회원 리스트  -->
   	<select id ="pmemberList" parameterType="Pager" resultMap="MemberLogin">
   			select M.*,F.* from members M left join memberFiles F 
   			on M.memNum=F.memNum
   			<include refid="search"></include> and grade =1 
   			order by M.memNum desc
			 limit #{startRow},#{perPage} 	
   	</select>

	<!--개인회원리스트 카운트 -->
   	<select id="listCount"  resultType="Integer">
   			select count(memNum) from members 
   			<include refid="search"></include> and grade =1
   	</select>

	<!--사업자회원 리스트  -->
	
	
	
	<!-- 카카오 회원가입-->
  	<insert id="kakaoJoin" parameterType="memberVO">
  		insert into members values(null,#{memId},null,#{nickname},#{nickname},'000-0000-0000',1,2)
  	</insert>

  	<!-- 카카오 -->
  	<select id="memberKakao" parameterType="memberVO" resultType="memberVO">
  		select * from members where memId=#{memId} and kind=2
  	</select>
  
  	<!-- 네이버 회원가입-->
  	<insert id="naverJoin" parameterType="memberVO">
  		insert into members values(null,#{memId},null,#{name},#{nickname},'000-0000-0000',1,1)
  	</insert>
  
  	<!-- 네이버 -->
  	<select id="memberNaver" parameterType="memberVO" resultType="memberVO">
  		select * from members where memId=#{memId} and kind=1
  	</select>
  
    
   	
 
  
  </mapper>